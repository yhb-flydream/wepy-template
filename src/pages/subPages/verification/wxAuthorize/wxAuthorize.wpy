<template>
  <!-- 提示电话错误 -->
  <view class="weui-toptips weui-toptips_warn" wx:if="{{!isPhoneErrorHidden}}">{{phoneErrorMsg}}</view>
  <!-- 弹出层 -->
  <view class="page-cover-wrap" wx:if="{{!isPageCoverHidden}}">
    <view class="page-cover-main">
      <!-- 手机号码验证 -->
      <view class="phone-verification">
        <view class="phone-verification__hd page-cover-title">手机号码验证</view>
        <view class="phone-verification__bd">
          <view class="input-list">
            <view class="input-item">
              <input type="tel" class="input" placeholder="请输入您的手机号" maxlength="{{phoneLength}}" value="{{phoneVal}}"
                     @input="telInput" @blur="telBlur"/>
            </view>
            <view class="input-item">
              <input type="number" class="input" placeholder="请输入验证码" maxlength="{{vCodeLength}}"
                     @input="vcodeInput" @blur="vcodeBlur" focus="{{vcodeFocus}}"/>
              <button class="weui-btn vcode-num" @tap="getVcode" disabled="{{isVcodeBtnDisabled}}">{{vcodeText}}</button>
            </view>
          </view>
        </view>
        <view class="phone-verification__ft">
          <button class="weui-btn submit-btn {{isSubmitBtnDisabled? 'disabled':''}}" @tap="phoneSubmitBtn"
                  disabled="{{isSubmitBtnDisabled}}">确定</button>
        </view>
      </view>
    </view>
  </view>
  <!-- 授权验证 -->
  <view class="page" hidden="{{isGetUserInfoHidden}}">
    <view class="page__hd">
      <view class="avatar-wrap">
        <view class="avatar-main">
          <view class="avatar__lt">
            <view class="img-wrap">
              <open-data type="userAvatarUrl" class="img"></open-data>
            </view>
            <open-data type="userNickName" class="name nick-name"></open-data>
          </view>
          <view class="avatar__ct">
            <view class="iconfont icon-shouquan"></view>
          </view>
          <view class="avatar__rt">
            <view class="img-wrap">
              <image src="../../../../common/lib/images/icon64_appwx_logo.png" class="img"></image>
            </view>
            <view class="name">wepy-template</view>
          </view>
        </view>
      </view>
    </view>
    <view class="page__bd">
      <view class="page__bd-title">公众号名称 申请获得以下权限:</view>
      <view class="page__bd-item">获得你的公开信息（昵称、头像等）</view>
    </view>
    <view class="weui-footer weui-footer_fixed-bottom page__ft">
      <button class="weui-btn ok-btn" type="primary" open-type="getUserInfo" lang="zh_CN"
              @getuserinfo="getUserInfo">授权登录</button>
      <button class="weui-btn cancel-btn" type="default" lang="zh_CN" @tap='cancel'>取消授权</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import WXAPI from '../../../../common/utils/WX-API'
  import API from '../../../../common/utils/API'

  export default class WxAuthorize extends wepy.page {
    // 页面配置项列表
    config = {
      navigationBarTitleText: '登陆授权',
      navigationBarTextStyle: 'black',
      navigationBarBackgroundColor: 'white'
    };

    // 页面的初始数据
    data = {
      registered_token: '', // 临时token
      isPageCoverHidden: true, // 弹窗隐藏
      isGetUserInfoHidden: false, // 验证信息隐藏
      phone: '', // 电话号码
      phoneLength: 11, // 电话号码长度
      vCode: '', // 验证码
      vCodeLength: 6, // 验证码长度
      vcodeText: '获取验证码', // 验证码文本
      countdownNum: 60, // 定时器倒计时数字
      isVcodeBtnDisabled: true, // 发送验证码按钮禁止点击
      isSubmitBtnDisabled: true, // 提交按钮禁止点击,
      vcodeFocus: false, // 验证码输入框自动获取焦点
      phoneErrorMsg: '', // 电话输入错误提示信息
      isPhoneErrorHidden: true // 提示信息对话框隐藏
    };

    // 页面事件集合
    methods = {
      /**
       * 获取用户基本信息
       * @param e
       */
      getUserInfo(e) {
        console.log(e)
        let that = this
        WXAPI.login((res) => {
          console.log('CODE', res)
          if (res.code) {
            API.hot_login({code: res.code}, (res) => {
              that.$parent.globalData.ACCESS_TOKEN = res.data[0].access_token
              that.$parent.globalData.HEADER = {'Authorization': `Bearer access_token=${res.data[0].access_token}`}
              WXAPI.setStorageSync('ACCESS_TOKEN', res.data[0].access_token)
              WXAPI.setStorageSync('COLLECTION', res.data[0].collection)
              WXAPI.navigateBack()
              // WXAPI.navigateTo('../faceRecognition/faceRecognition')
            }, (res) => {
              if (res.code === 300) {
                // that.$parent.globalData.registered_token = res.data[0].registered_token
                that.registered_token = res.data[0].registered_token
                that.isPageCoverHidden = false
                that.isGetUserInfoHidden = true
                that.$apply()
              } else {
                console.log('错误信息：', res.message)
              }
            })
          } else {
            console.log('登录失败！' + res.errMsg)
          }
        })
      },
      /**
       * 取消授权
       */
      cancel() {
        WXAPI.showToast('取消授权将不能进行任何操作')
      },
      /**
       * tel 输入时触发，得到输入的电话号码
       * @param e
       */
      telInput(e) {
        if (e.detail.cursor === this.phoneLength) {
          this.isVcodeBtnDisabled = false
          this.phone = e.detail.value
          this.$apply()
        } else {
          this.isVcodeBtnDisabled = true
          this.$apply()
        }
      },

      /**
       * tel 失去焦点时触发
       * @param e
       */
      telBlur(e) {
      },

      /**
       * 获取验证码
       */
      getVcode() {
        let that = this
        if ((/^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\d{8}$/).test(+that.phone)) {
          console.log(that.registered_token)
          console.log('发送验证码')
          API.hot_getCode({
            'phone': that.phone,
            'token': that.registered_token
          }, function (res) {
            console.log(res)
            that.isVcodeBtnDisabled = true
            that.vcodeFocus = true
            let countdownNum = that.countdownNum
            let timer = setInterval(function () {
              if (countdownNum === -1) {
                clearInterval(timer)
                that.vcodeText = '获取验证码'
                that.isVcodeBtnDisabled = false
                that.$apply()
              } else {
                that.vcodeText = countdownNum-- + 's'
                that.$apply()
              }
            }, 1000)
          })
        } else {
          that.isPhoneErrorHidden = false
          that.phoneErrorMsg = '手机号错误'
          setTimeout(function () {
            that.isPhoneErrorHidden = true
            that.phoneErrorMsg = ''
            that.$apply()
          }, 2000)
        }
      },

      /**
       * 验证码输入时触发
       * @param e
       */
      vcodeInput(e) {
        console.log(e.detail.cursor)
        e.detail.cursor === this.vCodeLength ? this.isSubmitBtnDisabled = false : this.isSubmitBtnDisabled = true
      },

      /**
       * 验证码失去焦点时获取输入的值
       * @param e
       */
      vcodeBlur(e) {
        this.vCode = e.detail.value
        this.$apply()
      },

      /**
       * 手机号码提交
       */
      phoneSubmitBtn() {
        let that = this
        console.log(that.phone)
        console.log(that.vCode)
        API.hot_registered({
          'phone': that.phone,
          'code': that.vCode,
          'registered_token': that.registered_token
        }, function (res) {
          console.log(res)
          /* WXAPI.setStorageSync('ACCESS_TOKEN', res.data.access_token)
          WXAPI.setStorageSync('USERINFO', res.data.reporter_name)
          that.$parent.globalData.ACCESS_TOKEN = res.data.access_token
          that.$parent.globalData.USERINFO = res.data.reporter_name
          that.$parent.globalData.HEADER = {'Authorization': `Bearer access_token=${res.data.access_token}`}
          WXAPI.reLaunch('/pages/tabBar/moreClue/list') */
          that.$parent.globalData.REGISTERED_TOKEN = res.data[0].registered_token
          WXAPI.navigateTo(`../faceRecognition/faceRecognition?registered_token=${res.data[0].registered_token}`)
          // WXAPI.navigateTo(`../IdCardLogin/IdCardLogin?token=${res.data[0].token}`)
        })
      }
    };

    // 生命周期回调—监听页面加载
    onLoad = function (options) {
      console.log('onLoad', options)
    };

    // 生命周期回调—监听页面显示
    onShow = function () {
    };

    // 生命周期回调—监听页面初次渲染完成
    onReady = function () {
    };

    // 生命周期回调—监听页面隐藏
    onHide = function () {
    };

    // 生命周期回调—监听页面卸载
    onUnload = function () {
    };

    // 监听用户下拉动作
    onPullDownRefresh = function () {
    };

    // 页面上拉触底事件的处理函数
    onReachBottom = function () {
    };

    // 用户点击右上角转发
    onShareAppMessage = function () {
    };

    // 页面滚动触发事件的处理函数
    onPageScroll = function () {
    };

    // 当前是 tab 页时，点击 tab 时触发
    onTabItemTap = function () {
    }
  }
</script>

<style lang="less">
  @import "../../../../style/subPages/verification/wxAuthorize";
</style>
